@model  HiveProject.Models.MessageExchange
@using HiveProject.Viewmodels

<!DOCTYPE html>
<html>
<head>
    <title>Chat</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css">
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.js"></script>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/chat.css" />
</head>
<body>
    <div class="container-fluid h-100 mt-5">
        <div class="row justify-content-center h-100">
            <div class="col-md-4 col-xl-3 chat">
                <div class="card mb-sm-3 mb-md-0 contacts_card">
                    <div class="card-header">
                        <div class="input-group">
                            <input type="text" placeholder="Search..." name="" class="form-control search">
                            <div class="input-group-prepend">
                                <span class="input-group-text search_btn"><i class="fas fa-search"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="card-body contacts_body">
                        <ul class="contacts">
                            @foreach (UsersViewModel user in Model.UserMatches)
                            {
                                <li class="active" onclick="SetReceiver('@user.Id', '@user.Username', '/Content/Images/@user.Thumbnail')">
                                    <div class="d-flex bd-highlight">
                                        <div class="img_cont">
                                            <img id="receiver avatar " src="~/Content/Images/@user.Thumbnail" class="rounded-circle user_img">
                                            <span class="status_icon offline" id='statusOf-@user.Username'></span>
                                        </div>
                                        <div class="user_info">
                                            <span>@user.Username</span>
                                            <p id='verbalStatusOf-@user.Username'>@user.Username is offline</p>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="card-footer"></div>
                </div>
            </div>
            <div class="col-md-8 col-xl-6 chat">
                <div class="card">
                    <div class="card-header msg_head">
                        <div class="d-flex bd-highlight">
                            <div class="img_cont">
                                <img id="ReceiverAvatar" src="~/Content/Images/@Model.ActiveUser.Thumbnail" class="rounded-circle user_img">
                                <span id='openStatusOf-@Model.ActiveUser.UserName' class="status_icon offline"></span>
                            </div>
                            <div class="user_info">


                                <span id="ReceiverName">@Model.ActiveUser.UserName</span>
                                <p id="ReceiverUnread"> @Html.DisplayFor(model => model.Receiver.UserGender), @Html.DisplayFor(model => model.Receiver.Age)</p>

                            </div>



                            <div class="video_cam">
                                <span><i class="fas fa-video"></i></span>
                                <span><i class="fas fa-phone"></i></span>
                            </div>
                        </div>
                        <span id="action_menu_btn"><i class="fas fa-ellipsis-v"></i></span>
                        <div class="action_menu">
                            <ul>
                                <li><i class="fas fa-user-circle"></i>@Html.ActionLink("View profile", "ChatProfiles", "Chat") </li>
                                <li><i class="fas fa-users" onclick="clearMessageBox()"></i>Delete message history</li>
                                <li><i class="fas fa-plus"></i> Add to group</li>
                                <li><i class="fas fa-ban"></i> Block</li>
                            </ul>
                        </div>
                    </div>
                    <div id="messageBox" class="card-body msg_card_body">
                        @foreach (var message in Model.LiveChatMessages.Where(m => m.SenderId == Model.Receiver.Id))
                        {
                            if (message.SenderId == Model.ActiveUser.Id)
                            {
                                <div class="d-flex justify-content-end mb-4">
                                    <div class="msg_cotainer_send">
                                        @message.Body
                                        <span class="msg_time_send">@message.Date.TimeOfDay</span>
                                    </div>
                                    <div class="img_cont_msg">
                                        <img src="~/Content/Images/@Model.ActiveUser.Thumbnail" class="rounded-circle user_img_msg">
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="d-flex justify-content-start mb-4">
                                    <div class="msg_cotainer">
                                        @message.Body
                                        <span class="msg_time">@message.Date.TimeOfDay</span>
                                    </div>
                                    <div class="img_cont_msg">
                                        <img src="https://randomuser.me/api/portraits/women/84.jpg" class="rounded-circle user_img_msg">
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div class="w-100 card-footer p-0 bg-light border border-bottom-0 border-left-0 border-right-0">
                        <div class="row m-0 p-0">
                            <div class="col-9 m-0 p-1">
                                <span id="senderId" hidden>@Model.ActiveUser.Id</span>
                                <span id="senderName" hidden>@Model.ActiveUser.UserName</span>
                                <span id="receiverId" hidden>@Model.Receiver.Id</span>
                                <span id="receiverName" hidden>@Model.Receiver.UserName</span>

                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="input-group">
                            <div class="input-group-append">
                                <input type="file" id="btnUpload" accept="image/*" name="files" hidden />
                                <span class="input-group-text attach_btn">
                                    <label for="btnUpload" class="custom-file-upload">
                                        <i class="fas fa-paperclip"></i>
                                    </label>
                                </span>
                            </div>
                            <textarea name="" class="form-control type_msg" id="messageInput" placeholder="Type your message..." data-emojiable="true"></textarea>
                            <div class="input-group-append">
                                <span class="input-group-text send_btn">
                                    <i class="fas fa-location-arrow" id="sendButton" value="Send Message" onclick="SendMessage()"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
@section scripts {
    <script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/Chat.js"></script>

    <script>
        const messageBox = document.getElementById("messageBox");

        async function SetReceiver(userId, userName, userAvatar, isSent = false) {

            
            currentReceiver = document.getElementById("ReceiverName");
            let openStatusIcon = document.getElementById("openStatusOf-" + currentReceiver.innerHTML);

            currentReceiver.innerHTML = userName;
            document.getElementById("ReceiverAvatar").src = userAvatar;
            document.getElementById("receiverId").innerHTML = userId;
            document.getElementById("receiverName").innerHTML = userName;
            openStatusIcon.id = "openStatusOf-" + userName;
            openStatusIcon.className = document.getElementById("statusOf-" + userName).className;

            const messagesExchanged = await loadReceiverMessages(userId);

            clearMessageBox();



            messagesExchanged.forEach(msg => displayMessageInBox(msg, msg.SenderId == document.getElementById("senderId").innerHTML));
        }



        function clearMessageBox() {
            while (messageBox.firstChild) {
                messageBox.removeChild(messageBox.firstChild);
            }
        }

        async function loadReceiverMessages(receiverId) {

            const urlString = "/api/Messages";
            console.log(urlString)
            return await sendData(urlString, receiverId);
        }

        $(document).ready(function () {
            $('#action_menu_btn').click(function () {
                $('.action_menu').toggle();
            });
        });</script>
}